{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","delete","name","email","phone","className","style","cursor","onClick","bind","float","color","to","marginRight","Contacts","Fragment","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","target","onsubmit","preventDefault","newContact","post","history","push","onSubmit","About","NotFound","Test","title","body","fetch","then","response","json","EditContact","updateContact","match","params","put","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77a19252.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state,action) => {\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n        return {\r\n            ...state,\r\n            contacts: state.contacts.filter(contact => \r\n                contact.id !== action.payload)\r\n        };\r\n        case 'ADD_CONTACT':\r\n        return {\r\n            ...state,\r\n            contacts:[action.payload,\r\n            ...state.contacts]\r\n        };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n              ...state,\r\n              contacts: state.contacts.map(\r\n                contact =>\r\n                  contact.id === action.payload.id\r\n                    ? (contact = action.payload)\r\n                    : contact\r\n              )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\nstate = {\r\n    contacts: [\r\n       \r\n    ],\r\n    dispatch: action => \r\n    this.setState(state => reducer(state,action))\r\n}\r\nasync componentDidMount(){\r\n    const res = await axios\r\n    .get('https://jsonplaceholder.typicode.com/users')\r\n    this.setState({contacts:res.data})\r\n}\r\nrender() {\r\n    return (\r\n        <Context.Provider value = {this.state}>\r\n            {this.props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios'\r\nimport {Link } from 'react-router-dom'\r\n\r\n class Contact extends Component {\r\n     state = {\r\n         showContactInfo: false\r\n     };\r\n     onShowClick = e =>  {\r\n        this.setState({showContactInfo: !this.state.showContactInfo});\r\n     }\r\n     onDeleteClick = async (id, dispatch) => {\r\n        \r\n        await axios\r\n        .delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        \r\n        dispatch({type: 'DELETE_CONTACT',payload: id})\r\n        \r\n     }\r\n    render() {\r\n        const {id,name,email,phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n        return (\r\n\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                        <h4>{name} \r\n                        <i  style={{cursor:'pointer'}} onClick={this.onShowClick} className=\"fas fa-sort-down\"></i>\r\n                        <i onClick={this.onDeleteClick.bind(this, id, dispatch)} className=\"fas fa-times\" style={{cursor:'pointer',float:'right',color:'red'}}></i>\r\n                        <Link to={`contact/edit/${id}`}> \r\n                        <i \r\n                        className=\"fas fa-pencil-alt\"\r\n                        style={{\r\n                            cursor:'pointer',\r\n                            float:'right',\r\n                            color:'black',\r\n                            marginRight:'16px'\r\n                        }}\r\n                        >\r\n                        </i>\r\n                        </Link>\r\n                        </h4>\r\n                        {showContactInfo ? (<ul className=\"list-group\">\r\n                            <li className=\"list-group-item\">Email: {email}</li>\r\n                            <li className=\"list-group-item\">Phone: {phone}</li>\r\n                        </ul>) : null}\r\n                        \r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>           \r\n        )\r\n    } \r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n    \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport {Consumer} from '../../context'\r\n\r\n\r\n class Contacts extends Component {\r\n\r\n         \r\n    render() {\r\n        \r\n        return (\r\n            <Consumer>\r\n            {value => {\r\n                const {contacts} = value;\r\n                return (\r\n                    \r\n                <React.Fragment>\r\n                    <h1 className=\"display-4 mb-2\">\r\n                        <span className=\"text-danger\">Contact </span>\r\n                         List\r\n                    </h1>\r\n                {contacts.map(contact => (\r\n                    <Contact \r\n                    key ={contact.id}\r\n                    contact = {contact} \r\n                     />\r\n                ) )}\r\n            </React.Fragment>\r\n                )}}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Contacts\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\n const Header = (props) =>  {\r\n     const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}</a>\r\n                    <div>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/\" className=\"nav-link\">\r\n                                  <i className=\"fas fa-home\"></i>  Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Header;\r\n ","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n          <label htmlFor={name}>{label}</label>\r\n          <input \r\n          type={type}\r\n          name={name}\r\n          className={classnames('form-control form-control-lg',{\r\n              'is-invalid':error\r\n          })} \r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n         />\r\n         {error &&  <div className=\"invalid-feedback\">{error}</div>}\r\n        \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired, \r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\n\r\nimport axios from 'axios';\r\n\r\n\r\n class AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]:\r\n     e.target.value}) \r\n\r\n     onsubmit = async (dispatch, e) => {\r\n         \r\n         e.preventDefault();\r\n\r\n         const {name,email,phone} = this.state;\r\n\r\n         // checkfor errors\r\n         if(name === ''){\r\n             this.setState({errors: {name: 'Name is required'}})\r\n             return\r\n         }\r\n         if(email === ''){\r\n            this.setState({errors: {email: 'Email is required'}})\r\n            return\r\n        }\r\n        if(phone === ''){\r\n            this.setState({errors: {phone: 'Phone is required'}})\r\n            return\r\n        }\r\n\r\n         const newContact = {\r\n             name,\r\n             email,\r\n             phone\r\n         }\r\n         const res = await axios\r\n         .post('https://jsonplaceholder.typicode.com/users',newContact)\r\n         \r\n         dispatch({type: 'ADD_CONTACT', payload: res.data})\r\n\r\n         \r\n\r\n         this.setState({\r\n             name: '',\r\n             email: '',\r\n             phone: '',\r\n             errors:{}\r\n         })\r\n\r\n         this.props.history.push('/');\r\n     }\r\n\r\n    render() {\r\n        const {name,email,phone,errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                  <div className=\"card-header\">Add Contact</div>\r\n                  <div className=\"card-body\">\r\n                    <form onSubmit={this.onsubmit.bind(this, dispatch)}>\r\n\r\n                    <TextInputGroup\r\n                        label = \"Name\"\r\n                        name=\"name\"\r\n                        placeholder=\" Enter Name...\"\r\n                        value = {name}\r\n                        onChange={this.onChange}\r\n                        error = {errors.name}\r\n                    />\r\n\r\n\r\n\r\n                    <TextInputGroup\r\n                        label = \"Email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\" Enter Email...\"\r\n                        value = {email}\r\n                        onChange={this.onChange}\r\n                        error = {errors.email}\r\n                    />\r\n\r\n                    <TextInputGroup\r\n                        label = \"Phone\"\r\n                        name=\"phone\"\r\n                        placeholder=\" Enter Phone...\"\r\n                        value = {phone}\r\n                        onChange={this.onChange}\r\n                        error = {errors.phone}\r\n                    />\r\n\r\n\r\n                        <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                    </form>\r\n                  </div>\r\n              </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n      \r\n    }\r\n}\r\n\r\nexport default AddContact\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple App to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exists</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n class Test extends Component {\r\n    state ={\r\n        title:'',\r\n        body:''\r\n    }\r\n\r\n     componentDidMount(){\r\n        fetch\r\n        ('https://jsonplaceholder.typicode.com/posts/1')\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                title:data.title,\r\n                body:data.body\r\n            })\r\n        });\r\n     }\r\n    render() {\r\n        const {title,body} = this.state\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test\r\n","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\n\r\nimport axios from 'axios';\r\n\r\n\r\n class EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n\r\n        const contact = res.data;\r\n        this.setState({\r\n            name:contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]:\r\n     e.target.value}) \r\n \r\n     onsubmit = async (dispatch, e) => {\r\n         \r\n         e.preventDefault();\r\n\r\n         const {name,email,phone} = this.state;\r\n\r\n         // checkfor errors\r\n         if(name === ''){\r\n             this.setState({errors: {name: 'Name is required'}})\r\n             return\r\n         }\r\n         if(email === ''){\r\n            this.setState({errors: {email: 'Email is required'}})\r\n            return\r\n        }\r\n        if(phone === ''){\r\n            this.setState({errors: {phone: 'Phone is required'}})\r\n            return\r\n        }\r\n        const updateContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n\r\n        const  {id} = this.props.match.params;\r\n        const res = await axios.put\r\n        (`https://jsonplaceholder.typicode.com/users/${id}`,updateContact);\r\n        \r\n        dispatch({type:'UPDATE_CONTACT',\r\n        payload:res.data})\r\n\r\n         this.setState({\r\n             name: '',\r\n             email: '',\r\n             phone: '',\r\n             errors:{}\r\n         })\r\n\r\n         this.props.history.push('/');\r\n     }\r\n\r\n    render() {\r\n        const {name,email,phone,errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                  <div className=\"card-header\">Edit Contact</div>\r\n                  <div className=\"card-body\">\r\n                    <form onSubmit={this.onsubmit.bind(this, dispatch)}>\r\n\r\n                    <TextInputGroup\r\n                        label = \"Name\"\r\n                        name=\"name\"\r\n                        placeholder=\" Enter Name...\"\r\n                        value = {name}\r\n                        onChange={this.onChange}\r\n                        error = {errors.name}\r\n                    />\r\n\r\n\r\n\r\n                    <TextInputGroup\r\n                        label = \"Email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\" Enter Email...\"\r\n                        value = {email}\r\n                        onChange={this.onChange}\r\n                        error = {errors.email}\r\n                    />\r\n\r\n                    <TextInputGroup\r\n                        label = \"Phone\"\r\n                        name=\"phone\"\r\n                        placeholder=\" Enter Phone...\"\r\n                        value = {phone}\r\n                        onChange={this.onChange}\r\n                        error = {errors.phone}\r\n                    />\r\n\r\n\r\n                        <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\r\n                    </form>\r\n                  </div>\r\n              </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n      \r\n    }\r\n}\r\n\r\nexport default EditContact","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact'\n\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound'\nimport Test from './components/test/Test'\nimport EditContact from './components/contacts/EditContact'\n\nimport { Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n    <div className=\"App\">\n      <Header branding= \"Contact Manager\" />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component= {Contacts}/>\n          <Route exact path=\"/contact/add\" component={AddContact} />\n          <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n          <Route exact path=\"/about\" component={About}/>\n          <Route exact path=\"/test\" component={Test} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}